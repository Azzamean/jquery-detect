---
import { Image } from '@astrojs/image/components'
import loadingImg from '../assets/loading.svg'
---

<form action="/detect.json" method="post" class="loading">
  <div class="flex-column">
    <label for="url">URL</label>
    <div class="flex-row input-wrap">
      <input
        required
        type="url"
        name="url"
        id="url"
        placeholder="Paste or type a URL"
      />
      <button type="submit" class="flex-center">
        <Image
          src={loadingImg}
          alt="loading"
          class="loading-image"
          width={18}
          height={18}
        />
        <span>Detect</span>
      </button>
    </div>
    <div id="result"></div>
  </div>
</form>

<style>
  .input-wrap {
    gap: 10px;
  }
  input.invalid {
    border: 1px solid red;
  }
  button .loading-image {
    display: none;
    position: absolute;
  }
  button.loading .loading-image {
    display: block;
  }
  button.loading span {
    visibility: hidden;
  }
  #result {
    display: none;
    font-size: 2em;
    padding-top: 0.5em;
  }
</style>

<script>
  ;(function () {
    const form = document.querySelector('form')
    const input = document.querySelector('input')
    const button = document.querySelector('button')
    if (!form || !input || !button) return

    function showResult(value: string) {
      const result = document.querySelector('#result') as HTMLElement
      if (!result) return
      result.style.display = 'block'
      result.innerHTML = value
    }

    function handleError(error: unknown) {
      console.error(error)
      showResult('Sorry! Something went wrong. Please refresh and try again.')
    }

    async function submit(url: string) {
      if (!form || !input || !button) return
      if (!url) {
        input.classList.add('invalid')
        return
      }

      button.disabled = true
      button.classList.add('loading')
      input.classList.remove('invalid')
      try {
        const res = await fetch(form.action, {
          method: form.method,
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ url })
        })
        if (res.ok) {
          const { version } = await res.json()
          showResult(
            version
              ? `Version detected: <code>${version}</code>`
              : 'No version detected'
          )
        } else {
          let error
          try {
            const json = await res.json()
            error = json.error
          } catch (e) {}
          handleError(error || res.statusText)
        }
      } catch (error) {
        handleError(error)
      } finally {
        button.disabled = false
        button.classList.remove('loading')
      }
    }
    form.addEventListener('submit', async (e) => {
      e.preventDefault()
      submit(input.value)
    })
    input.addEventListener('paste', (e) => {
      const value = e.clipboardData?.getData('text')
      if (value) {
        submit(value)
      }
    })
  })()
</script>
